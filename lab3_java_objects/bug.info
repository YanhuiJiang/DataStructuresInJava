
        check ("abc", "def");  
        // should be false
        check ("abc2", "abc"); 
        // should be true
        check ("abc", "def");  
        // should be false
        check ("abc2", "abc"); 
        // should be true
        check ("abfc", "acb"); 
        //should be true, but is false
        check (" ", " a"); 
        //should be true, but is false
        check ("", "a"); 
        //should be false
        check ("abc", "aabcI"); 
        //should be true, but is false
        // check (true,"abc"); 
        // //crash
        // check (true, 91); 
        // //crash
        // check (null, "abc"); 
        // //crash
        check("a ", "a"); //should be true
        check("a c  ", "a c ");
        check("shigrader", "higrader"); //should be true, but is false
        check("canndy", "candy"); //should be true, but is false
        //seems like it says it's false when it should be true if the off by one is added 
        //either in the beginning of the word, or somewhere in the middle. It does not
        // error when the change is at the end.
        check("candyy", "candy"); //should be true and returns true

1. Describe all pairs of arguments to check for which contains1MoreThan correctly returns true.

strings with a similar character in the same position 
ie. (abc2, abc) (abc3, abc). It will return true if the change is made at the end of the word, such as in (“candyy”, “candy”). 

2. Describe all pairs of arguments to check for which contains1MoreThan correctly returns false.

strings that don’t have any similar characters
ie. (abc, def)
If you make 
no string v. a string 
ie. (“”, “a”)

3. Describe all pairs of arguments to check for which contains1MoreThan incorrectly returns true, that is, when the first string argument to check is not the result of inserting exactly one character into the second.

no pairs of strings. 

4. Describe all pairs of arguments to check for which contains1MoreThan incorrectly returns false, that is, when the first string argument to check is the result of inserting exactly one character into the second.

i. contains1MoreThan will return true if there is change only at the end of the string. 
ie. (“candyy”, “candy”) will return true, but (“canndy”, “candy”) will return false even though both are different only by one more character. 

ii. When one string has more characters than the other. 
   check ("abfc", "acb"); 
        //should be true, but is false
   check ("abc", "abcI"); 
        //should be true, but is false
    
iii. When one string is empty with a space and one string has an empty char[0]
   check (" ", " a"); 
        //should be true, but is false
 
5. Describe all pairs of arguments to check for which contains1MoreThan crashes.

nullpointer exception. 
ie. check(null, “abdke”);

